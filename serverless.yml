service: playground

provider:
  name: aws
  # The AWS region in which to deploy (us-east-1 is the default)
  region: eu-west-3
  # Environment variables
  environment:
    APP_ENV: production # Or use ${sls:stage} if you want the environment to match the stage
    APP_DEBUG: true
    APP_URL: ${ssm:/Playground/AppUrl}
    APP_KEY: ${ssm:/Playground/AppKey}
    DB_HOST: ${ssm:/Playground/DBHost}
    DB_DATABASE: "playground-db"
    DB_USERNAME: ${ssm:/Playground/DBUser}
    DB_PASSWORD: ${ssm:/Playground/DBPassword}
    FILESYSTEM_DISK: s3
    AWS_BUCKET: !Ref Storage
  # Set up IAM
  iam:
    role:
      statements:
        # Allow Lambda to read and write files in the S3 buckets
        - Effect: Allow
          Action: s3:*
          Resource:
            - !Sub '${Storage.Arn}*' # Storage bucket
            - !Sub '${Storage.Arn}/*' # Everything inside the bucket
  # VPC
  vpc:
    securityGroupIds:
      - sg-0e84c7b092567905d
    subnetIds:
      - subnet-0ce9f6a7fdbacfd9d
      - subnet-0bd02e2125fd4f249
      - subnet-03e386ac5df4894bf
  apiGateway:
    binaryMediaTypes:
      - "*/*"
    environment:
      BREF_BINARY_RESPONSES: '1'
resources:
  Resources:
    # Create our S3 storage bucket using CloudFormation
    Storage:
      Type: AWS::S3::Bucket

package:
  # Files and directories to exclude from deployment
  patterns:
    - "!node_modules/**"
    - "!public/storage"
    - "!resources/assets/**"
    - "!storage/**"
    - "!tests/**"
    - "!.env"

functions:
  # This function runs the Laravel website/API
  web:
    handler: public/index.php
    runtime: php-83-fpm
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    events:
      - httpApi: "*"

  # This function lets us run artisan commands in Lambda
  artisan:
    handler: artisan
    runtime: php-83-console
    timeout: 720 # in seconds
    # Uncomment to also run the scheduler every minute
    #events:
    #    - schedule:
    #          rate: rate(1 minute)
    #          input: '"schedule:run"'

plugins:
  - ./vendor/bref/bref
  - serverless-lift

constructs:
  website:
    type: server-side-website
    assets:
      "/build/*": public/build
      "/favicon.ico": public/favicon.ico
      "/robots.txt": public/robots.txt
      # add here any file or directory that needs to be served from S3
